from aiogram import Router
from aiogram.types import Message

from app.filters.filters_chat import StartSearchFilter
from app.config.settings import views, my_logger
from app.database.CRUDs.insert_user import add_user
from app.validation.model_user import User
from .choice_companion import choice_companion


router = Router(name=__name__)


@router.message(StartSearchFilter())
async def handler_start_search(message: Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "üöÄ –ü–æ–∏—Å–∫ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞".

    :param message: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Message,
    """

    try:
        await add_user(User(telegram_id=message.from_user.id, full_name=message.from_user.full_name))

    except ValueError:
        return my_logger.error(f'–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏, –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}')

    await message.answer(text=views.get('search_msg'))

    await choice_companion(message.from_user.id)
